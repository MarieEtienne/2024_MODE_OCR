---

title: "Exploration données sur les manchots"
group: "CHOULETTE Klervi, DENIS Manon, DUPORT Maureen, MOTTE Arthur, POYARD Antoine, SESIA Marion, TANGUY Céline" 

bibliography: references.bib
execute: 
  freeze: auto
output: 
  html_document:
   toc: true
   toc_float: true
---

```{r}
library(factoextra)
library(FactoMineR)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(ggspatial)
library(gridExtra)
```
Location : 

Data were collected in Antarctica on Biscoe, Dream and Torgersen Islands. 

```{r}
# Download country data (including Antarctica)
world <- ne_countries(scale = "medium", returnclass = "sf")

# Filter to keep only Antarctica
antarctica <- world[world$continent == "Antarctica", ]

rectangle_coords <- st_as_sfc(st_bbox(c(xmin = -90, xmax = -55, ymin = -75, ymax = -60), crs = st_crs(4326)))

# Transform the rectangle into the polar projection system
rectangle_proj <- st_transform(rectangle_coords, crs = antarctic_proj)

# Create the map
gg_antartique = ggplot(data = antarctica) +
    annotate("rect", xmin = -90, xmax = -55, ymin = -75, ymax = -60,
           fill = "blue") +
  geom_sf() +
  coord_sf(crs = "+proj=laea +lat_0=-90 +datum=WGS84") +
 annotate("rect", 
           xmin = st_bbox(rectangle_proj)["xmin"], xmax = st_bbox(rectangle_proj)["xmax"], 
           ymin = st_bbox(rectangle_proj)["ymin"], ymax = st_bbox(rectangle_proj)["ymax"], 
           alpha = 0.2, fill = "blue")+
  theme_minimal() +
  labs(title = "Antarctica map",
       caption = "Data: Natural Earth") +
  annotation_scale(location = "bl", width_hint = 0.5)

antarctic_proj <- "+proj=laea +lat_0=-90 +datum=WGS84"

# Point coordinates in longitude and latitude
point_coords <- data.frame(lon = c(-66.209547, -64, -65), lat = c(-66, -65, -64.8))

# Convert the point into an sf object (longitude/latitude coordinate system WGS84)
point_sf <- st_as_sf(point_coords, coords = c("lon", "lat"), crs = 4326)

# Transform the point into the projected coordinate system of the map
point_proj <- st_transform(point_sf, crs = antarctic_proj)

# Extract the projected coordinates for use in annotate
point_proj_coords <- st_coordinates(point_proj)

# Create a bounding box manually with the coordinates
# Convert the bounding box into an sf object
bbox_sf <- st_as_sfc(st_bbox(c(xmin = -90, xmax = -55, ymin = -75, ymax = -60)))

# Crop the map using the bounding box
antarctica_cropped <- st_crop(antarctica, bbox_sf)

# Create the map
gg_zone_interet = ggplot() +
  geom_sf(data = antarctica_cropped) +
  geom_sf(data = point_proj, color = "blue", size = 1, alpha = 0.8, shape = 19) +

  coord_sf(crs = "+proj=laea +lat_0=-90 +datum=WGS84") +
  theme_minimal() +
  labs(title = "Area of Interest",
       caption = "Data: Natural Earth") +
  annotation_scale(location = "bl", width_hint = 0.5)

grid.arrange(gg_antartique, gg_zone_interet, ncol = 2)
```


## Dataset presentation : 

**Columns name :**

 - studyName :Sampling expedition from which data were collected, generated, etc.  
 - Sample Number : an integer denoting the continuous numbering sequence for each sample  
 - Species : a character string denoting the penguin species  
 - Region : a character string denoting the region of Palmer LTER sampling grid  
 - Island : a character string denoting the island near Palmer Station where samples were collected  
 - Stage : a character string denoting reproductive stage at sampling  
 - Individual ID : a character string denoting the unique ID for each individual in dataset  
 - Clutch Completion : a character string denoting if the study nest observed with a full clutch, i.e., 2 eggs  
 - Date Egg : a date denoting the date study nest observed with 1 egg (sampled)  
 - Culmen Length : a number denoting the length of the dorsal ridge of a bird's bill (millimeters)  
 - Culmen Depth : a number denoting the depth of the dorsal ridge of a bird's bill (millimeters)  
 - Flipper Length : an integer denoting the length penguin flipper (millimeters)  
 - Body Mass : an integer denoting the penguin body mass (grams)  
 - Sex : a character string denoting the sex of an animal  
 - Delta 15 N : a number denoting the measure of the ratio of stable isotopes 15N:14N  
 - Delta 13 C : a number denoting the measure of the ratio of stable isotopes 13C:12C  
 - Comments : a character string with text providing additional relevant information for data  


```{r}
data <- read.table("penguins_raw.csv", sep = "," , header = TRUE, stringsAsFactors = T)
summary(data)
dim(data)
```





Change species names :  
```{r}
data = data %>%
  mutate(Species = recode(Species, "Adelie Penguin (Pygoscelis adeliae)" = "Adelie", "Chinstrap penguin (Pygoscelis antarctica)" = "Chinstrap", "Gentoo penguin (Pygoscelis papua)" = "Gentoo"))
```


Distribution of species between the islands :  

```{r}
table(data$Island, data$Species)
```

Some graphs :

```{r}
ggplot(data, aes(x = Flipper.Length..mm., y = Body.Mass..g., color = Species))+
  geom_point()+
  theme_classic()
```

```{r}
ggplot(data, aes(x = Culmen.Length..mm., y = Culmen.Depth..mm., color = Species))+
  geom_point()+
  theme_classic()
```

```{r}
ggplot(data, aes(x = Delta.15.N..o.oo., y = Delta.13.C..o.oo., color = Species, shape = Island))+
  geom_point()+
  theme_classic()
```

```{r}
#sélection des données quantitatives
data_numeric <- select_if(data, is.numeric)
#enlever le numéro de l'individu et le sample
#la body mass et le flipper sont corrélés à plus de 80% donc on suprimme flipper car c'est la données la plus corrélées à toute
data_numeric <- data_numeric[,-c(1,2,5)]
#centrer et réduire les données
data_scales <- scale(data_numeric)
acp_data= PCA(data_scales)
summary(acp_data)
#Variances pour chaque composantes
fviz_eig(acp_data)
#Projection des individus et coloration en fonction de l'espèce
fviz_pca_ind(acp_data, geom.ind = "point", col.ind = as.factor(data$Species), addEllipses = T, pointshape = 19)
#Projection des individus et coloration en fonction de l'île
fviz_pca_ind(acp_data, geom.ind = "point", col.ind = data$Island, pointshape = 19, addEllipses = T)
#projection des variables
fviz_pca_var(acp_data)
```


```{r NA}

data2 <-data[,1:17]
data2
NA_df <- (colSums(is.na(data2)) / nrow(data2)) * 100

color_pal <- colorRampPalette(c("limegreen", "yellow", "firebrick"), bias = 20)(10)
NA_col <- color_pal[as.integer(NA_df/length(NA_df)*9)+1]

# Graphique
barplot(NA_df, main = "NA quantity per column",
        ylab = "NA", col = NA_col, las=2, cex.names=0.4)

NA_mean<-mean(NA_df)
# 0.78% 

abline(h=NA_mean, col = "red", lwd = 2)

```


```{r violin}

# Violin plot for Culmen Length (beak length)
ggplot(data, aes(x = Species, y = Culmen.Length..mm., fill = Species)) +
  geom_violin(trim = FALSE) +
  geom_jitter(shape = 16, position = position_jitter(0.2), color = "black", alpha = 0.3) +
    stat_summary(fun = mean, geom = "point", shape = 20, size = 3, fill = "red", color = "red") +
  labs(title = "Distribution of Culmen Length by Species",
       x = "Species",
       y = "Culmen Length (mm)") +
  theme_minimal() +
  theme(legend.position = "none")

# Violin plot for Flipper Length
ggplot(data, aes(x = Species, y = Flipper.Length..mm., fill = Species)) +
  geom_violin(trim = FALSE) +
  geom_jitter(shape = 16, position = position_jitter(0.2), color = "black", alpha = 0.3) +
    stat_summary(fun = mean, geom = "point", shape = 20, size = 3, fill = "red", color = "red") +
  labs(title = "Distribution of Flipper Length by Species",
       x = "Species",
       y = "Flipper Length (mm)") +
  theme_minimal() +
  theme(legend.position = "none")

# Violin plot for Body Mass
ggplot(data, aes(x = Species, y = Body.Mass..g., fill = Species)) +
  geom_violin(trim = FALSE) +
  geom_jitter(shape = 16, position = position_jitter(0.2), color = "black", alpha = 0.3) +
    stat_summary(fun = mean, geom = "point", shape = 20, size = 3, fill = "red", color = "red") +
  labs(title = "Distribution of Body Mass by Species",
       x = "Species",
       y = "Body Mass (g)") +
  theme_minimal() +
  theme(legend.position = "none")

```














