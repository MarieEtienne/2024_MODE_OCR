---
title: "Titre à trouver"
author: "TESSIER/GRAVE/DAVID/DENOUAL/SERRE/LAPORTE/LEROUX/BRUZZO"
date: "2024-10-22"
output: html_document
bibliography: references.bib
---

#### We have at our disposal 4 datasets including :

-   the data collected on the species of bats captured by date and location in French Guiana, and containing information on sex, age and reproductive state\
-   the meteorological data of French Guiana from 1950 to 2024\
-   the capture locations coordinates (degree minute second)

```{r}

library(dplyr)
library(readxl)
library(lubridate)

data_chiro<-read_excel("data_chiro.xlsx") #import data chiro
data_abiot_50_22<-read.csv("abiot_1950_2022.csv", sep = ";") #import data meteo 1950 -> 2022 #pensez à mettre les sources
data_abiot_23_24<-read.csv("abiot_2023_2024.csv", sep = ";") #import data meteo 2023 -> 2024
coord_chiro<-read_excel("COORD_CAPTURE.xlsx")

```

#### Data processing

-   Firstly we concatenate all the abiotic data together

-   Then we start to clean the abiotic the dataset by deleting all years that precede the first event of capture, the we use the Lubridate R package [@grolemund2016lubridate] to formate the data column as we want and the dplyr R package [@wickham2014dplyr] to re-organize the data set

```{r}

# CLEANING AND CREATING A CLIMATIC TABLE --------------------------------------------------
data_abiot<-rbind(data_abiot_50_22, data_abiot_23_24) #On concatène les deux tables de données ensemble

data_abiot <- data_abiot %>%
  filter(AAAAMMJJ >= 20141028) %>% #delete everything before this date
  mutate(AAAAMMJJ = ymd(AAAAMMJJ)) %>%  # Conversion en format Date
  mutate(Year = year(AAAAMMJJ)) %>%  # Extraire l'année après conversion en Date
  mutate(AAAAMMJJ = format(AAAAMMJJ, "%d-%m-%Y")) %>%  # Formater la date en 'dd-mm-YYYY'
  select(NUM_POSTE, NOM_USUEL, LAT, LON, AAAAMMJJ, RR, TM, TAMPLI, FFM, Year) %>% # finir les pipes
  # Inclure la colonne Year
  rename(date = AAAAMMJJ, rain_mm = RR, Temperature = TM, ampli_Temp = TAMPLI, wind_ms = FFM, COMMUNE = NOM_USUEL)%>% #renommer les colonnes
  mutate(julian_day = yday(date)) #mettre au format jour julien


```

#### Computing moonlight intensity

- Function that simulates the lunar cycle as a proxy for night-time luminosity

```{r}
#Function to compute the moonlight % for a fixed date
Lune <- function(date){
  sortie <- c() #crée un vecteur vide pour stocker les résultats (cette fonction nous permet de calculer un vecteur contenant l'intensité lumineuse de la lune pour un vecteur de dates données)
  for(i in 1:length(date)){ 
    date_num <- as.numeric(as.Date(date[i],format="%d-%m-%Y")) #on transforme la date en nombre (0=01/01/1970)
    sortie[i] <- (0.5*(cos((date_num-21)*((2*pi)/(29.530589)))+1)) #formule donnant l'intensité lumineuse de la lune à une date donnée
  }
  return(sortie)
}

data_abiot$Lune <-Lune(data_abiot$date) #Adding moonlight % to the climatic table

```

#### Data processing

- Data_chiro table pre-processing : We only keep the columns of interest, then we only keep the female individuals because the reproduction indices are mainly observable on females. We only keep adult individuals because this is the age class likely to have reproductive indices.

```{r}
data_chiro <- data_chiro %>%
  select(c(Année, Commune, Localité, Date, Espèce, Sexe, Repro, Age)) %>% #select the columns we want
  filter(Sexe == "F") %>% #on ne garde que les femelles car très peu d'indices de repro sur les mâles
  filter(Age == "AD") %>% #on ne conserve que les individus 
  mutate(Date = ymd(Date)) %>% #date en jour julien
  mutate(Year = year(Date)) %>% # Créer une nouvelle colonne 'Year' contenant uniquement l'année
  mutate(Date = format(Date, "%d-%m-%Y"))%>% #formatage de la date
  mutate(julian_day = yday(Date))%>% #Date =julian_day
  rename(LIEU_DIT = Localité, COMMUNE = Commune) #on renomme

# Agréger les données pour obtenir la somme de Repro par jour julien
data_test <- data_clean %>% #ici, 
  group_by(julian_day) %>%
  summarise(somme_repro = length(Repro))


```

#### Converting DMS coordinates to decimal coordinates

- Fonction for converting minute/second degree into decimal degrees

```{r}
# Fonction pour convertir DMS en degrés décimaux
convert_dms_to_decimal <- function(dms) {
  # Séparer les parties de la coordonnée DMS
  parts <- str_match(dms, "(\\d+)°(\\d+)'(\\d+\\.?\\d*)''\\s([NSEW])")
  
  degrees <- as.numeric(parts[, 2]) 
  minutes <- as.numeric(parts[, 3])
  seconds <- as.numeric(parts[, 4])
  direction <- parts[, 5]
  
  # Calculer les degrés décimaux
  decimal <- degrees + minutes / 60 + seconds / 3600
  
  # Ajuster en fonction de la direction (S ou W deviennent négatifs)
  if (direction %in% c("S", "W")) {
    decimal <- -decimal
  }
  
  return(decimal)
}

```

- We convert the DMS coordinates to decimal coordinates and we merge it with data_chiro by the capture locality

```{r}
coord_chiro <- coord_chiro %>%
  rowwise() %>%  # Appliquer la mutation par ligne
  mutate(
    lon_dms = str_extract(COORD, "^[^N]+W"),  # Extraire la partie longitude
    lat_dms = str_extract(COORD, "[^W]+N"),   # Extraire la partie latitude
    Longitude = convert_dms_to_decimal(lon_dms),  # Convertir en décimal
    Latitude = convert_dms_to_decimal(lat_dms)    # Convertir en décimal
  ) %>%
  ungroup() %>%  # Sortir du contexte rowwise
  select(COMMUNE, LIEU_DIT, Latitude, Longitude)%>% #choisir les colonnes que l'on garde
  rename(LAT = Latitude, LON = Longitude) #on renomme

data_chiro <- data_chiro %>%
  inner_join(coord_chiro, by = "LIEU_DIT") # on merge la table des coordonnées décimales à celles des données de capture en fonction du lieu de capture

data_chiro <- data_chiro%>%
  select(COMMUNE.x,LIEU_DIT,Date,Espèce,Sexe,Repro,Age,Year,julian_day,LAT,LON)%>% #on spécifie les colonnes que l'on garde
  rename(COMMUNE = COMMUNE.x)
```

```{bib}
@article{grolemund2016lubridate,
  title={lubridate: Make dealing with dates a little easier},
  author={Grolemund, Garrett and Wickham, Hadley and Spinu, Vitalie and Constigan, Imanuel and Lee, Chel Hee and Cotton, Richard and Lyttle, Ian and Chang, Winston},
  journal={R package version},
  volume={1},
  number={6},
  year={2016}
}

@article{wickham2014dplyr,
  title={dplyr},
  author={Wickham, Hadley and Francois, R and Henry, L and M{\"u}ller, K},
  journal={A Grammar of Data Manipulation 2020 [Last accessed on 2020 Aug 12] Available from},
  pages={Rproject},
  year={2014}
}
```
