------------------------------------------------------------------------

title: "Modèles matriciels et applications" group: "Rudy, Tanguy, Manon, Garan, Anaëlle, Oceane, Victor"

bibliography: references.bib execute: freeze: auto output: html_document: toc: true toc_float: true ---

Le lien du site : https://zenodo.org/records/8251495

Pistes

Calcul

Taux de succès Taux de survie

voir si habitat préférentiel, région,… voir quelles facteurs expliquent taux de succès

voir si décalages entre dates de départ du nid -\> facteurs expliquant

voir si habitat préferentiel

MAIS ATTENTION à ne pas être biaisé : du genre que des oiseaux d’une certaines espèces ne soit présents que dans un habitat

refaire analyse de bases cf ASA

# Document R modifié et avec ajouts

## Import des données

**Do not forget to set your working directory in the right place** **Menu : Session/Set Working Directory/Choose directory** *And indicate Git/2024_MODE_OCR*

```{r}
# Datatset import under the name of "data"
data <- read.csv("Bird_dataset.csv", sep=";", header = T, stringsAsFactors = T)
```

```{r}
# Attach the datatset
detach(data)
attach(data)
```

```{r}
# Charge the librairies
library(ggplot2)
library(sf)
library(terra)
library(dplyr)
library(spData)
library(tmap)
library(leaflet)
library(spDataLarge)
library(gifski)
library(maps)
```

```{r}
# View the firsts lignes of the dataset
head(data)
```

In order to picture the data in a more visual way, we will be representing our dataset on a map. 
The first step in our map creation is the separation of the dataset by the counties. 

```{r}
data_list_county <- split(data, data$County)

data_will <- data_list_county[["Will"]]
data_jo_daviess <- data_list_county[["Jo Daviess"]]
data_lafayette <- data_list_county[["Lafayette"]]
data_iowa <- data_list_county[["Iowa"]]
data_dane <- data_list_county[["Dane"]]
data_green <- data_list_county[["Green"]]
data_grant <- data_list_county[["Grant"]]
data_grundy <- data_list_county[["Grundy"]]
data_lee_ogle <- data_list_county[["Lee/Ogle"]]
data_lee <- data_list_county[["Lee"]]
data_rock <- data_list_county[["Rock"]]
data_monroe <- data_list_county[["Monroe"]]
data_carroll <- data_list_county[["Carroll"]]
data_carroll_whiteside <- data_list_county[["Carroll/Whiteside"]]
```

We are now adding columns for the coordinates of each county, the coordinates were obtained by searching for the conties on openstreetmap. 

```{r}
data_will <- data_will %>%
  mutate(longitude_column = -88.0817,
         latitude_column = 41.5250)

data_jo_daviess <- data_jo_daviess %>%
  mutate(longitude_column = -90.4290,
         latitude_column = 42.4167)

data_grundy <- data_grundy %>%
  mutate(longitude_column = -88.4210,
         latitude_column = 41.3570)

data_lee <- data_lee %>%
  mutate(longitude_column = -89.4850,
         latitude_column = 41.8430)

data_carroll <- data_carroll %>%
  mutate(longitude_column = -89.9826,
         latitude_column = 42.0956)

data_lafayette <- data_lafayette %>%
  mutate(longitude_column = -90.1160,
         latitude_column = 42.6825)

data_iowa <- data_iowa %>%
  mutate(longitude_column = -90.1160,
         latitude_column = 42.6825)

data_dane <- data_dane %>%
  mutate(longitude_column = -89.4012,
         latitude_column = 43.0731)

data_green <- data_green %>%
  mutate(longitude_column = -89.6387,
         latitude_column = 42.6017)

data_grant <- data_grant %>%
  mutate(longitude_column = -90.7082,
         latitude_column = 42.8475)

data_rock <- data_rock %>%
  mutate(longitude_column = -89.0187,
         latitude_column = 42.6828)

data_monroe <- data_monroe %>%
  mutate(longitude_column = -90.8129,
         latitude_column = 43.9447)

data_lee_ogle <- data_lee_ogle %>%
  mutate(longitude_column = -89.4038,
         latitude_column = 41.9293)

data_carroll_whiteside <- data_carroll_whiteside %>%
  mutate(longitude_column = -89.9742,
         latitude_column = 41.9527)
```


Now, for each county dataset, we subdivide the said dataset for each year when at least one nest has been observed in this conty. 

```{r}
county_names <- c("data_will", "data_jo_daviess", "data_lafayette", "data_iowa", 
                  "data_dane", "data_green", "data_grant", "data_grundy", 
                  "data_lee_ogle", "data_lee", "data_rock", "data_monroe", 
                  "data_carroll", "data_carroll_whiteside")

county_dataframes <- mget(county_names)
tables <- c()

for(i in seq_along(county_dataframes)) {
    county <- county_dataframes[[i]]
    county_name <- county_names[i]
    
    if (!is.data.frame(county)) {
        print(paste0("Error: ", county_name, " is not a dataframe"))
        next
    }
    
    if (!"Year" %in% colnames(county)) {
        print(paste0("Error: ", county_name, " does not contain a 'Year' column"))
        next
    }
    
    data_county_year <- split(county, county$Year)

    for(year in min(county$Year):max(county$Year)){
        tableau <- data_county_year[[as.character(year)]]
        
        if (!is.null(tableau)) {
            variable_name <- paste0(county_name, "_", year)
            tables <- c(tables, variable_name)
            assign(variable_name, tableau, envir = .GlobalEnv)
        }
    }
}
```


We went from a full dataset with everything mixed-up to multiple datasets for each year and each county when an observation is available. 

Here are, for example, the first rows of the dataframe related to the county of Will in 1995

```{r}
head(data_will_1995)
```

The main information that we want to present on the map are the mean number of fledged birds by nest and the amount of data available for each county and each year. 

Here is the creation of a summary dataframe that contains all theese information for each dataframe. 

```{r}
annee <- c()
taux_de_reussite <- c()
nb_donnees <- c()
lat <- c()
lon<- c()

# Creation of a summary for each year
for(table_name in tables){
  tablecreated <- get(table_name)
  annee <- c(annee, tablecreated$Year[1])
  taux_de_reussite <- c(taux_de_reussite, sum(tablecreated$Number_Fledged)/nrow(tablecreated))
  nb_donnees <- c(nb_donnees, nrow(tablecreated))
  lat <- c(lat, tablecreated$latitude_column[1])
  lon <- c(lon, tablecreated$longitude_column[1])
}

# Creating a dataframe of thoose summaries
tableau <- data.frame(
  annee = annee, 
  Mean_number_fledged_by_nest = taux_de_reussite, 
  nb_donnees = nb_donnees, 
  lat = lat, 
  lon = lon
)

# Seting the dataframe as a spatial class in order to create a map
tableau_sf <- st_as_sf(tableau, coords = c("lon", "lat"), crs = 4326)
tableau_sf <- st_transform(tableau_sf, crs = st_crs(us_states))
```

As we now have all the data of interest in one single organized table, 
we can actually create the map. 

```{r}
tmap_mode("view")

bird_anim <- tm_shape(us_states) + 
  tm_polygons() + 
  tm_shape(tableau_sf) + 
  tm_symbols(size = "Mean_number_fledged_by_nest", col = "nb_donnees", 
             style = "quantile", title.size = "Mean number fledged by nest", title.col = "Number of nest observed") + 
  tm_layout(title = "Bird Observations Over Time", 
            legend.position = c("left", "bottom"),
            frame = FALSE, 
            legend.show = T) +
  tm_facets(by = "annee", nrow = 1, ncol = 1, free.coords = FALSE)
```

And now, we just have to run the following cell to display the map. 
```{r}
tmap_animation(bird_anim)
```
Please, check out the newly created map on the "Viewer" panel of your Rstudio application. 